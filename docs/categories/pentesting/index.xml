<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pentesting on SecBlog</title>
    <link>https://sec.alexflor.es/categories/pentesting/</link>
    <description>Recent content in Pentesting on SecBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Untitled.</copyright>
    <lastBuildDate>Sat, 01 Apr 2017 22:08:35 -0400</lastBuildDate>
    
	<atom:link href="https://sec.alexflor.es/categories/pentesting/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating BashBunny Payloads</title>
      <link>https://sec.alexflor.es/post/bashbunny/</link>
      <pubDate>Sat, 01 Apr 2017 22:08:35 -0400</pubDate>
      
      <guid>https://sec.alexflor.es/post/bashbunny/</guid>
      <description>What is it? The BashBunny is an attack platform that allows attackers to create payloads in Bash. The device can be scripted to enumerate as a HID (keyboard), mass storage, serial, and Ethernet. This enables a multitude of attacks including thing like exfiltrating documents over a network interface or stealing account hashes from locked computers.
Creating a Payload We want to create a payload that allows for easy exfiltration from macOS.</description>
    </item>
    
    <item>
      <title>Finding Your Way Out From Behind Firewalls with Strict Outbound Rules</title>
      <link>https://sec.alexflor.es/post/egress-ports/</link>
      <pubDate>Tue, 07 Feb 2017 19:44:18 -0500</pubDate>
      
      <guid>https://sec.alexflor.es/post/egress-ports/</guid>
      <description>You&amp;rsquo;ve achieved code execution on a machine, but for some reason your reverse shell isn&amp;rsquo;t pinging you back. Or that wget/tftp command isn&amp;rsquo;t downloading your recon/post-exploitation tools. There&amp;rsquo;s a chance you&amp;rsquo;re dealing with an egress problem. Typical ports that need outboud access are blocked. You try the main ones you can think of (21, 22, 53, 80, 8080, 443), but none of them seem to be connecting. Do you start at 1 and manually test?</description>
    </item>
    
    <item>
      <title>B2R: Wallaby Walkthrough</title>
      <link>https://sec.alexflor.es/post/wallaby/</link>
      <pubDate>Fri, 30 Dec 2016 19:16:02 -0400</pubDate>
      
      <guid>https://sec.alexflor.es/post/wallaby/</guid>
      <description>Executive Summary This machine had an unlisted but open webapp path that allowed for remote command execution. After establishing a reverse shell as the limited user www-data, privilege checks showed the user was allowed to modify firewall rules. There was also an IRC server that contained a bot that allowed command execution through the use of the .run command. The command would only obey the user waldo so modification of the firewall allows an attacker to kick and assume the waldo identity.</description>
    </item>
    
    <item>
      <title>B2R: Stapler</title>
      <link>https://sec.alexflor.es/post/stapler/</link>
      <pubDate>Sat, 24 Dec 2016 23:45:38 -0500</pubDate>
      
      <guid>https://sec.alexflor.es/post/stapler/</guid>
      <description>Adding the IP address of the VM to the hosts file allows one to cut down on some typing.
Executive Summary This machine had several services running, some of which revealed employee names and accounts that could later be leveraged to compromise the system. A Wordpress plug-in vulnerability was found and used to extract database credentials, which then led to a non-privileged shell. Once scanned, it was discovered that a script ran every 20 minutes as the root user and that the script was writable to our non-privileged user.</description>
    </item>
    
    <item>
      <title>B2R: IMF Walkthrough</title>
      <link>https://sec.alexflor.es/post/imf_walkthrough/</link>
      <pubDate>Tue, 01 Nov 2016 19:16:02 -0400</pubDate>
      
      <guid>https://sec.alexflor.es/post/imf_walkthrough/</guid>
      <description>After mapping the network and finding our IP address at 192.168.1.162, we can add it to our /etc/hosts temporarily to make things a little easier for us.
echo &amp;quot;192.168.1.162 imf&amp;quot; &amp;gt;&amp;gt; /etc/hosts  Lets see what kind of machine we&amp;rsquo;re dealing with.
Ok, so web only. Great. nikto didn&amp;rsquo;t reveal any low-hanging fruit so let&amp;rsquo;s dive into the source.
Check that out! Our first flag was hidden in http://imf/contact.php. This looks like base64.</description>
    </item>
    
  </channel>
</rss>