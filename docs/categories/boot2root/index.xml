<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Boot2root on SecBlog</title>
    <link>https://sec.alexflor.es/categories/boot2root/</link>
    <description>Recent content in Boot2root on SecBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Untitled.</copyright>
    <lastBuildDate>Fri, 30 Dec 2016 19:16:02 -0400</lastBuildDate>
    
	<atom:link href="https://sec.alexflor.es/categories/boot2root/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>B2R: Wallaby Walkthrough</title>
      <link>https://sec.alexflor.es/post/wallaby/</link>
      <pubDate>Fri, 30 Dec 2016 19:16:02 -0400</pubDate>
      
      <guid>https://sec.alexflor.es/post/wallaby/</guid>
      <description>Executive Summary This machine had an unlisted but open webapp path that allowed for remote command execution. After establishing a reverse shell as the limited user www-data, privilege checks showed the user was allowed to modify firewall rules. There was also an IRC server that contained a bot that allowed command execution through the use of the .run command. The command would only obey the user waldo so modification of the firewall allows an attacker to kick and assume the waldo identity.</description>
    </item>
    
    <item>
      <title>B2R: Stapler</title>
      <link>https://sec.alexflor.es/post/stapler/</link>
      <pubDate>Sat, 24 Dec 2016 23:45:38 -0500</pubDate>
      
      <guid>https://sec.alexflor.es/post/stapler/</guid>
      <description>Adding the IP address of the VM to the hosts file allows one to cut down on some typing.
Executive Summary This machine had several services running, some of which revealed employee names and accounts that could later be leveraged to compromise the system. A Wordpress plug-in vulnerability was found and used to extract database credentials, which then led to a non-privileged shell. Once scanned, it was discovered that a script ran every 20 minutes as the root user and that the script was writable to our non-privileged user.</description>
    </item>
    
    <item>
      <title>B2R: IMF Walkthrough</title>
      <link>https://sec.alexflor.es/post/imf_walkthrough/</link>
      <pubDate>Tue, 01 Nov 2016 19:16:02 -0400</pubDate>
      
      <guid>https://sec.alexflor.es/post/imf_walkthrough/</guid>
      <description>After mapping the network and finding our IP address at 192.168.1.162, we can add it to our /etc/hosts temporarily to make things a little easier for us.
echo &amp;quot;192.168.1.162 imf&amp;quot; &amp;gt;&amp;gt; /etc/hosts  Lets see what kind of machine we&amp;rsquo;re dealing with.
Ok, so web only. Great. nikto didn&amp;rsquo;t reveal any low-hanging fruit so let&amp;rsquo;s dive into the source.
Check that out! Our first flag was hidden in http://imf/contact.php. This looks like base64.</description>
    </item>
    
    <item>
      <title>B2R: Tr0ll Walkthrough</title>
      <link>https://sec.alexflor.es/post/b2r_troll_walkthrough/</link>
      <pubDate>Thu, 20 Oct 2016 20:57:00 -0400</pubDate>
      
      <guid>https://sec.alexflor.es/post/b2r_troll_walkthrough/</guid>
      <description>A couple of weeks ago, work sent me to a security class for an upcoming product. While there, I learned about vulnhub, a repository of intentionally vulnerable virtual machines for anyone to compromise. Since coming back, vulnhub has become my new obsession. Here&amp;rsquo;s a walkthrough of my attempt.
Note: I struggled a bit more that this writeup lets on. The struggle is ommited for clarity and brevity.
__
After finding the VM with an nmap scan, we see a couple of open ports.</description>
    </item>
    
  </channel>
</rss>